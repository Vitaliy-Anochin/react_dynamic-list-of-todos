{"version":3,"sources":["components/TodoFilter/TodoFilter.tsx","api.ts","components/TodoList/TodoList.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoFilter","todos","onFilterTodo","useState","query","setQuery","filtered","setfiltered","useEffect","filter","todo","title","toLowerCase","includes","className","onSubmit","event","preventDefault","onChange","value","completed","handleFilter","target","type","placeholder","style","pointerEvents","onClick","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoList","selectedTodo","onTodoSelect","map","id","classNames","Loader","TodoModal","onClose","user","setUser","userId","href","email","name","App","setTodos","initialTodos","setInitialTodos","isLoading","setIsLoading","setSelectedTodo","todosFromServer","handleSelected","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.78a506e6.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  onFilterTodo: (todos: Todo[]) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  todos,\n  onFilterTodo,\n}) => {\n  const [query, setQuery] = useState('');\n  const [filtered, setfiltered] = useState<Todo[]>([]);\n\n  useEffect(() => {\n    onFilterTodo(filtered\n      .filter(\n        todo => todo.title.toLowerCase().includes(query.toLowerCase()),\n      ));\n  }, [query, filtered]);\n\n  const handleFilter = (value: string) => {\n    switch (value) {\n      case 'all':\n        setfiltered(todos);\n        break;\n      case 'active':\n        setfiltered(todos.filter(todo => todo.completed === false));\n        break;\n      case 'completed':\n        setfiltered(todos.filter(todo => todo.completed === true));\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={(event) => {\n        event.preventDefault();\n      }}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => {\n              handleFilter(event.target.value);\n            }}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => {\n            setQuery(event.target.value);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodo: Todo | null,\n  onTodoSelect: (todo: Todo | null) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  onTodoSelect,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => {\n        return (\n          <tr\n            data-cy=\"todo\"\n            className=\"\"\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">\n              {todo.id}\n            </td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames(\n                todo.completed\n                  ? 'has-text-success'\n                  : 'has-text-danger',\n              )}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                onClick={() => {\n                  onTodoSelect(todo);\n                }}\n                type=\"button\"\n              >\n                <span className=\"icon\">\n                  <i className={classNames(\n                    'far',\n                    selectedTodo\n                      && (selectedTodo.id === todo.id)\n                      ? 'fa-eye-slash'\n                      : 'fa-eye',\n                  )}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\n\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  selectedTodo: Todo,\n  onClose: () => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  onClose,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(selectedTodo.userId)\n      .then(setUser);\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {selectedTodo.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto: ${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoFilter } from './components/TodoFilter';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\nimport { Loader } from './components/Loader';\nimport { TodoModal } from './components/TodoModal';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [initialTodos, setInitialTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    getTodos()\n      .then(todosFromServer => {\n        setIsLoading(true);\n        setTodos(todosFromServer);\n        setInitialTodos(todosFromServer);\n      });\n  }, []);\n\n  const handleSelected = (todo: Todo | null) => {\n    setSelectedTodo(todo);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            {!isLoading\n              ? <Loader />\n              : (\n                <>\n                  <div className=\"block\">\n                    <TodoFilter\n                      todos={initialTodos}\n                      onFilterTodo={setTodos}\n                    />\n                  </div>\n                  <div className=\"block\">\n                    <TodoList\n                      todos={todos}\n                      selectedTodo={selectedTodo}\n                      onTodoSelect={(todo) => {\n                        handleSelected(todo);\n                      }}\n                    />\n                  </div>\n                </>\n              )}\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          onClose={() => {\n            setSelectedTodo(null);\n          }}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}